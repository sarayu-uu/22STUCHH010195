{"ast":null,"code":"var _StorageService;\nimport { log } from './logger';\nconst STORAGE_KEY = 'url_shortener_data';\nexport class StorageService {\n  static getInstance() {\n    if (!StorageService.instance) {\n      StorageService.instance = new StorageService();\n    }\n    return StorageService.instance;\n  }\n  constructor() {\n    log.info('api', 'Storage service initialized');\n  }\n  saveUrl(url) {\n    try {\n      const existingData = this.getAllUrls();\n      const updatedData = [...existingData.filter(u => u.id !== url.id), url];\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedData));\n      log.info('api', `URL saved to storage: ${url.shortCode}`);\n    } catch (error) {\n      log.error('api', `Failed to save URL to storage: ${error}`);\n      throw new Error('Failed to save URL');\n    }\n  }\n  getAllUrls() {\n    try {\n      const data = localStorage.getItem(STORAGE_KEY);\n      if (!data) return [];\n      const urls = JSON.parse(data);\n      return urls.map(url => ({\n        ...url,\n        createdAt: new Date(url.createdAt),\n        expiresAt: new Date(url.expiresAt),\n        clicks: url.clicks.map(click => ({\n          ...click,\n          timestamp: new Date(click.timestamp)\n        }))\n      }));\n    } catch (error) {\n      log.error('api', `Failed to retrieve URLs from storage: ${error}`);\n      return [];\n    }\n  }\n  getUrlByShortCode(shortCode) {\n    try {\n      const urls = this.getAllUrls();\n      const url = urls.find(u => u.shortCode === shortCode);\n      if (url) {\n        // Check if expired\n        const now = new Date();\n        if (now > url.expiresAt) {\n          url.isExpired = true;\n          this.saveUrl(url);\n          log.warn('api', `Accessed expired URL: ${shortCode}`);\n        }\n      }\n      return url || null;\n    } catch (error) {\n      log.error('api', `Failed to retrieve URL by shortcode: ${error}`);\n      return null;\n    }\n  }\n  addClick(shortCode, clickData) {\n    try {\n      const url = this.getUrlByShortCode(shortCode);\n      if (url && !url.isExpired) {\n        url.clicks.push(clickData);\n        this.saveUrl(url);\n        log.info('api', `Click recorded for ${shortCode}`);\n      }\n    } catch (error) {\n      log.error('api', `Failed to record click: ${error}`);\n    }\n  }\n  isShortCodeExists(shortCode) {\n    try {\n      const urls = this.getAllUrls();\n      return urls.some(url => url.shortCode === shortCode);\n    } catch (error) {\n      log.error('api', `Failed to check shortcode existence: ${error}`);\n      return false;\n    }\n  }\n  clearExpiredUrls() {\n    try {\n      const urls = this.getAllUrls();\n      const now = new Date();\n      const validUrls = urls.filter(url => now <= url.expiresAt);\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(validUrls));\n      log.info('api', `Cleared ${urls.length - validUrls.length} expired URLs`);\n    } catch (error) {\n      log.error('api', `Failed to clear expired URLs: ${error}`);\n    }\n  }\n}\n_StorageService = StorageService;\nStorageService.instance = void 0;\nexport const storageService = StorageService.getInstance();","map":{"version":3,"names":["log","STORAGE_KEY","StorageService","getInstance","instance","constructor","info","saveUrl","url","existingData","getAllUrls","updatedData","filter","u","id","localStorage","setItem","JSON","stringify","shortCode","error","Error","data","getItem","urls","parse","map","createdAt","Date","expiresAt","clicks","click","timestamp","getUrlByShortCode","find","now","isExpired","warn","addClick","clickData","push","isShortCodeExists","some","clearExpiredUrls","validUrls","length","_StorageService","storageService"],"sources":["C:/Users/ameya/Desktop/affordmed/src/utils/storage.ts"],"sourcesContent":["import { ShortenedUrl, ClickData } from '../types';\r\nimport { log } from './logger';\r\n\r\nconst STORAGE_KEY = 'url_shortener_data';\r\n\r\nexport class StorageService {\r\n  private static instance: StorageService;\r\n\r\n  static getInstance(): StorageService {\r\n    if (!StorageService.instance) {\r\n      StorageService.instance = new StorageService();\r\n    }\r\n    return StorageService.instance;\r\n  }\r\n\r\n  private constructor() {\r\n    log.info('api', 'Storage service initialized');\r\n  }\r\n\r\n  saveUrl(url: ShortenedUrl): void {\r\n    try {\r\n      const existingData = this.getAllUrls();\r\n      const updatedData = [...existingData.filter(u => u.id !== url.id), url];\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedData));\r\n      log.info('api', `URL saved to storage: ${url.shortCode}`);\r\n    } catch (error) {\r\n      log.error('api', `Failed to save URL to storage: ${error}`);\r\n      throw new Error('Failed to save URL');\r\n    }\r\n  }\r\n\r\n  getAllUrls(): ShortenedUrl[] {\r\n    try {\r\n      const data = localStorage.getItem(STORAGE_KEY);\r\n      if (!data) return [];\r\n      \r\n      const urls = JSON.parse(data);\r\n      return urls.map((url: any) => ({\r\n        ...url,\r\n        createdAt: new Date(url.createdAt),\r\n        expiresAt: new Date(url.expiresAt),\r\n        clicks: url.clicks.map((click: any) => ({\r\n          ...click,\r\n          timestamp: new Date(click.timestamp)\r\n        }))\r\n      }));\r\n    } catch (error) {\r\n      log.error('api', `Failed to retrieve URLs from storage: ${error}`);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getUrlByShortCode(shortCode: string): ShortenedUrl | null {\r\n    try {\r\n      const urls = this.getAllUrls();\r\n      const url = urls.find(u => u.shortCode === shortCode);\r\n      \r\n      if (url) {\r\n        // Check if expired\r\n        const now = new Date();\r\n        if (now > url.expiresAt) {\r\n          url.isExpired = true;\r\n          this.saveUrl(url);\r\n          log.warn('api', `Accessed expired URL: ${shortCode}`);\r\n        }\r\n      }\r\n      \r\n      return url || null;\r\n    } catch (error) {\r\n      log.error('api', `Failed to retrieve URL by shortcode: ${error}`);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  addClick(shortCode: string, clickData: ClickData): void {\r\n    try {\r\n      const url = this.getUrlByShortCode(shortCode);\r\n      if (url && !url.isExpired) {\r\n        url.clicks.push(clickData);\r\n        this.saveUrl(url);\r\n        log.info('api', `Click recorded for ${shortCode}`);\r\n      }\r\n    } catch (error) {\r\n      log.error('api', `Failed to record click: ${error}`);\r\n    }\r\n  }\r\n\r\n  isShortCodeExists(shortCode: string): boolean {\r\n    try {\r\n      const urls = this.getAllUrls();\r\n      return urls.some(url => url.shortCode === shortCode);\r\n    } catch (error) {\r\n      log.error('api', `Failed to check shortcode existence: ${error}`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  clearExpiredUrls(): void {\r\n    try {\r\n      const urls = this.getAllUrls();\r\n      const now = new Date();\r\n      const validUrls = urls.filter(url => now <= url.expiresAt);\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(validUrls));\r\n      log.info('api', `Cleared ${urls.length - validUrls.length} expired URLs`);\r\n    } catch (error) {\r\n      log.error('api', `Failed to clear expired URLs: ${error}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport const storageService = StorageService.getInstance();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}