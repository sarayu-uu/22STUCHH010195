{"ast":null,"code":"class Logger {\n  constructor() {\n    this.LOGGING_ENDPOINT = 'http://20.244.56.144/evaluation-service/logs';\n    this.STACK = 'frontend';\n  }\n  async sendLog(entry) {\n    try {\n      const logData = {\n        ...entry,\n        stack: this.STACK,\n        timestamp: new Date().toISOString()\n      };\n      await fetch(this.LOGGING_ENDPOINT, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(logData)\n      });\n    } catch (error) {\n      // Fallback to console if logging service is unavailable\n      console.error('Failed to send log to service:', error);\n      console.log('Original log:', entry);\n    }\n  }\n  debug(packageName, message) {\n    this.sendLog({\n      stack: this.STACK,\n      level: 'debug',\n      package: packageName,\n      message\n    });\n  }\n  info(packageName, message) {\n    this.sendLog({\n      stack: this.STACK,\n      level: 'info',\n      package: packageName,\n      message\n    });\n  }\n  warn(packageName, message) {\n    this.sendLog({\n      stack: this.STACK,\n      level: 'warn',\n      package: packageName,\n      message\n    });\n  }\n  error(packageName, message) {\n    this.sendLog({\n      stack: this.STACK,\n      level: 'error',\n      package: packageName,\n      message\n    });\n  }\n  fatal(packageName, message) {\n    this.sendLog({\n      stack: this.STACK,\n      level: 'fatal',\n      package: packageName,\n      message\n    });\n  }\n}\nexport const logger = new Logger();\n\n// Replace console.log usage\nexport const log = {\n  debug: (packageName, message) => logger.debug(packageName, message),\n  info: (packageName, message) => logger.info(packageName, message),\n  warn: (packageName, message) => logger.warn(packageName, message),\n  error: (packageName, message) => logger.error(packageName, message),\n  fatal: (packageName, message) => logger.fatal(packageName, message)\n};","map":{"version":3,"names":["Logger","constructor","LOGGING_ENDPOINT","STACK","sendLog","entry","logData","stack","timestamp","Date","toISOString","fetch","method","headers","body","JSON","stringify","error","console","log","debug","packageName","message","level","package","info","warn","fatal","logger"],"sources":["C:/Users/ameya/Desktop/affordmed/src/utils/logger.ts"],"sourcesContent":["export type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'fatal';\r\nexport type LogPackage = 'component' | 'hook' | 'api' | 'page' | 'style' | 'state';\r\n\r\ninterface LogEntry {\r\n  stack: string;\r\n  level: LogLevel;\r\n  package: LogPackage;\r\n  message: string;\r\n  timestamp?: string;\r\n}\r\n\r\nclass Logger {\r\n  private readonly LOGGING_ENDPOINT = 'http://20.244.56.144/evaluation-service/logs';\r\n  private readonly STACK = 'frontend';\r\n\r\n  private async sendLog(entry: LogEntry): Promise<void> {\r\n    try {\r\n      const logData = {\r\n        ...entry,\r\n        stack: this.STACK,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      await fetch(this.LOGGING_ENDPOINT, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(logData),\r\n      });\r\n    } catch (error) {\r\n      // Fallback to console if logging service is unavailable\r\n      console.error('Failed to send log to service:', error);\r\n      console.log('Original log:', entry);\r\n    }\r\n  }\r\n\r\n  debug(packageName: LogPackage, message: string): void {\r\n    this.sendLog({\r\n      stack: this.STACK,\r\n      level: 'debug',\r\n      package: packageName,\r\n      message,\r\n    });\r\n  }\r\n\r\n  info(packageName: LogPackage, message: string): void {\r\n    this.sendLog({\r\n      stack: this.STACK,\r\n      level: 'info',\r\n      package: packageName,\r\n      message,\r\n    });\r\n  }\r\n\r\n  warn(packageName: LogPackage, message: string): void {\r\n    this.sendLog({\r\n      stack: this.STACK,\r\n      level: 'warn',\r\n      package: packageName,\r\n      message,\r\n    });\r\n  }\r\n\r\n  error(packageName: LogPackage, message: string): void {\r\n    this.sendLog({\r\n      stack: this.STACK,\r\n      level: 'error',\r\n      package: packageName,\r\n      message,\r\n    });\r\n  }\r\n\r\n  fatal(packageName: LogPackage, message: string): void {\r\n    this.sendLog({\r\n      stack: this.STACK,\r\n      level: 'fatal',\r\n      package: packageName,\r\n      message,\r\n    });\r\n  }\r\n}\r\n\r\nexport const logger = new Logger();\r\n\r\n// Replace console.log usage\r\nexport const log = {\r\n  debug: (packageName: LogPackage, message: string) => logger.debug(packageName, message),\r\n  info: (packageName: LogPackage, message: string) => logger.info(packageName, message),\r\n  warn: (packageName: LogPackage, message: string) => logger.warn(packageName, message),\r\n  error: (packageName: LogPackage, message: string) => logger.error(packageName, message),\r\n  fatal: (packageName: LogPackage, message: string) => logger.fatal(packageName, message),\r\n};"],"mappings":"AAWA,MAAMA,MAAM,CAAC;EAAAC,YAAA;IAAA,KACMC,gBAAgB,GAAG,8CAA8C;IAAA,KACjEC,KAAK,GAAG,UAAU;EAAA;EAEnC,MAAcC,OAAOA,CAACC,KAAe,EAAiB;IACpD,IAAI;MACF,MAAMC,OAAO,GAAG;QACd,GAAGD,KAAK;QACRE,KAAK,EAAE,IAAI,CAACJ,KAAK;QACjBK,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MAED,MAAMC,KAAK,CAAC,IAAI,CAACT,gBAAgB,EAAE;QACjCU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEd,KAAK,CAAC;IACrC;EACF;EAEAe,KAAKA,CAACC,WAAuB,EAAEC,OAAe,EAAQ;IACpD,IAAI,CAAClB,OAAO,CAAC;MACXG,KAAK,EAAE,IAAI,CAACJ,KAAK;MACjBoB,KAAK,EAAE,OAAO;MACdC,OAAO,EAAEH,WAAW;MACpBC;IACF,CAAC,CAAC;EACJ;EAEAG,IAAIA,CAACJ,WAAuB,EAAEC,OAAe,EAAQ;IACnD,IAAI,CAAClB,OAAO,CAAC;MACXG,KAAK,EAAE,IAAI,CAACJ,KAAK;MACjBoB,KAAK,EAAE,MAAM;MACbC,OAAO,EAAEH,WAAW;MACpBC;IACF,CAAC,CAAC;EACJ;EAEAI,IAAIA,CAACL,WAAuB,EAAEC,OAAe,EAAQ;IACnD,IAAI,CAAClB,OAAO,CAAC;MACXG,KAAK,EAAE,IAAI,CAACJ,KAAK;MACjBoB,KAAK,EAAE,MAAM;MACbC,OAAO,EAAEH,WAAW;MACpBC;IACF,CAAC,CAAC;EACJ;EAEAL,KAAKA,CAACI,WAAuB,EAAEC,OAAe,EAAQ;IACpD,IAAI,CAAClB,OAAO,CAAC;MACXG,KAAK,EAAE,IAAI,CAACJ,KAAK;MACjBoB,KAAK,EAAE,OAAO;MACdC,OAAO,EAAEH,WAAW;MACpBC;IACF,CAAC,CAAC;EACJ;EAEAK,KAAKA,CAACN,WAAuB,EAAEC,OAAe,EAAQ;IACpD,IAAI,CAAClB,OAAO,CAAC;MACXG,KAAK,EAAE,IAAI,CAACJ,KAAK;MACjBoB,KAAK,EAAE,OAAO;MACdC,OAAO,EAAEH,WAAW;MACpBC;IACF,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAMM,MAAM,GAAG,IAAI5B,MAAM,CAAC,CAAC;;AAElC;AACA,OAAO,MAAMmB,GAAG,GAAG;EACjBC,KAAK,EAAEA,CAACC,WAAuB,EAAEC,OAAe,KAAKM,MAAM,CAACR,KAAK,CAACC,WAAW,EAAEC,OAAO,CAAC;EACvFG,IAAI,EAAEA,CAACJ,WAAuB,EAAEC,OAAe,KAAKM,MAAM,CAACH,IAAI,CAACJ,WAAW,EAAEC,OAAO,CAAC;EACrFI,IAAI,EAAEA,CAACL,WAAuB,EAAEC,OAAe,KAAKM,MAAM,CAACF,IAAI,CAACL,WAAW,EAAEC,OAAO,CAAC;EACrFL,KAAK,EAAEA,CAACI,WAAuB,EAAEC,OAAe,KAAKM,MAAM,CAACX,KAAK,CAACI,WAAW,EAAEC,OAAO,CAAC;EACvFK,KAAK,EAAEA,CAACN,WAAuB,EAAEC,OAAe,KAAKM,MAAM,CAACD,KAAK,CAACN,WAAW,EAAEC,OAAO;AACxF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}