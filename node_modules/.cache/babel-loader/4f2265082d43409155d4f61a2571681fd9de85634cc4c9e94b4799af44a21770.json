{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { urlService } from '../services/urlService';\nimport { log } from '../utils/logger';\nexport const useUrlShortener = () => {\n  _s();\n  const [shortenedUrls, setShortenedUrls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const shortenUrls = useCallback(async urls => {\n    try {\n      log.info('hook', `useUrlShortener: Starting to shorten ${urls.length} URLs`);\n      setLoading(true);\n      setError(null);\n      const results = await urlService.shortenUrls(urls);\n      setShortenedUrls(results);\n      log.info('hook', `useUrlShortener: Successfully shortened ${results.length} URLs`);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error occurred';\n      const appError = {\n        type: 'validation',\n        message: errorMessage,\n        details: 'Failed to shorten URLs'\n      };\n      setError(appError);\n      log.error('hook', `useUrlShortener: Error shortening URLs - ${errorMessage}`);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const clearError = useCallback(() => {\n    setError(null);\n    log.debug('hook', 'useUrlShortener: Error cleared');\n  }, []);\n  const clearResults = useCallback(() => {\n    setShortenedUrls([]);\n    log.debug('hook', 'useUrlShortener: Results cleared');\n  }, []);\n  return {\n    shortenedUrls,\n    loading,\n    error,\n    shortenUrls,\n    clearError,\n    clearResults\n  };\n};\n_s(useUrlShortener, \"8A+Kv0EHKNMzE0J1dk77TCqKhpM=\");","map":{"version":3,"names":["useState","useCallback","urlService","log","useUrlShortener","_s","shortenedUrls","setShortenedUrls","loading","setLoading","error","setError","shortenUrls","urls","info","length","results","err","errorMessage","Error","message","appError","type","details","clearError","debug","clearResults"],"sources":["C:/Users/ameya/Desktop/affordmed/src/hooks/useUrlShortener.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { ShortenedUrl, UrlSubmissionData, AppError } from '../types';\r\nimport { urlService } from '../services/urlService';\r\nimport { log } from '../utils/logger';\r\n\r\ninterface UseUrlShortenerReturn {\r\n  shortenedUrls: ShortenedUrl[];\r\n  loading: boolean;\r\n  error: AppError | null;\r\n  shortenUrls: (urls: UrlSubmissionData[]) => Promise<void>;\r\n  clearError: () => void;\r\n  clearResults: () => void;\r\n}\r\n\r\nexport const useUrlShortener = (): UseUrlShortenerReturn => {\r\n  const [shortenedUrls, setShortenedUrls] = useState<ShortenedUrl[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<AppError | null>(null);\r\n\r\n  const shortenUrls = useCallback(async (urls: UrlSubmissionData[]) => {\r\n    try {\r\n      log.info('hook', `useUrlShortener: Starting to shorten ${urls.length} URLs`);\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const results = await urlService.shortenUrls(urls);\r\n      setShortenedUrls(results);\r\n      \r\n      log.info('hook', `useUrlShortener: Successfully shortened ${results.length} URLs`);\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error occurred';\r\n      const appError: AppError = {\r\n        type: 'validation',\r\n        message: errorMessage,\r\n        details: 'Failed to shorten URLs'\r\n      };\r\n      \r\n      setError(appError);\r\n      log.error('hook', `useUrlShortener: Error shortening URLs - ${errorMessage}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n    log.debug('hook', 'useUrlShortener: Error cleared');\r\n  }, []);\r\n\r\n  const clearResults = useCallback(() => {\r\n    setShortenedUrls([]);\r\n    log.debug('hook', 'useUrlShortener: Results cleared');\r\n  }, []);\r\n\r\n  return {\r\n    shortenedUrls,\r\n    loading,\r\n    error,\r\n    shortenUrls,\r\n    clearError,\r\n    clearResults,\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,GAAG,QAAQ,iBAAiB;AAWrC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAA6B;EAAAC,EAAA;EAC1D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAiB,EAAE,CAAC;EACtE,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAkB,IAAI,CAAC;EAEzD,MAAMY,WAAW,GAAGX,WAAW,CAAC,MAAOY,IAAyB,IAAK;IACnE,IAAI;MACFV,GAAG,CAACW,IAAI,CAAC,MAAM,EAAE,wCAAwCD,IAAI,CAACE,MAAM,OAAO,CAAC;MAC5EN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMK,OAAO,GAAG,MAAMd,UAAU,CAACU,WAAW,CAACC,IAAI,CAAC;MAClDN,gBAAgB,CAACS,OAAO,CAAC;MAEzBb,GAAG,CAACW,IAAI,CAAC,MAAM,EAAE,2CAA2CE,OAAO,CAACD,MAAM,OAAO,CAAC;IACpF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,MAAMC,YAAY,GAAGD,GAAG,YAAYE,KAAK,GAAGF,GAAG,CAACG,OAAO,GAAG,wBAAwB;MAClF,MAAMC,QAAkB,GAAG;QACzBC,IAAI,EAAE,YAAY;QAClBF,OAAO,EAAEF,YAAY;QACrBK,OAAO,EAAE;MACX,CAAC;MAEDZ,QAAQ,CAACU,QAAQ,CAAC;MAClBlB,GAAG,CAACO,KAAK,CAAC,MAAM,EAAE,4CAA4CQ,YAAY,EAAE,CAAC;IAC/E,CAAC,SAAS;MACRT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,UAAU,GAAGvB,WAAW,CAAC,MAAM;IACnCU,QAAQ,CAAC,IAAI,CAAC;IACdR,GAAG,CAACsB,KAAK,CAAC,MAAM,EAAE,gCAAgC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGzB,WAAW,CAAC,MAAM;IACrCM,gBAAgB,CAAC,EAAE,CAAC;IACpBJ,GAAG,CAACsB,KAAK,CAAC,MAAM,EAAE,kCAAkC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLnB,aAAa;IACbE,OAAO;IACPE,KAAK;IACLE,WAAW;IACXY,UAAU;IACVE;EACF,CAAC;AACH,CAAC;AAACrB,EAAA,CAhDWD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}